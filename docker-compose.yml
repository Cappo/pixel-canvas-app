version: '3.9'
services:
  redis:
    profiles:
      - backend
      - data
      - all
    image: redis
    ports:
      - 6379:6379
    volumes:
      - ./redis-cache:/data
  redis-commander:
    profiles:
      - backend
      - data
      - all
    image: rediscommander/redis-commander:latest
    ports:
      - 3002:8081
    depends_on:
      - redis
    links:
      - redis
    environment:
      REDIS_HOSTS: local:redis:6379
  db:
    profiles:
      - backend
      - data
      - all
    image: mongo
    ports:
      - 27017:27017
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: example
    volumes:
      - ./db-cache:/data/db
  mongo-express:
    profiles:
      - data
      - backend
      - all
    image: mongo-express:latest
    restart: always
    depends_on:
      - db
    links:
      - db
    ports:
      - 3001:8081
    environment:
      ME_CONFIG_MONGODB_SERVER: db
      ME_CONFIG_MONGODB_ADMINUSERNAME: root
      ME_CONFIG_MONGODB_ADMINPASSWORD: example
  api:
    profiles:
      - backend
      - all
    image: pixel_api:local
    build: ./api
    restart: always
    deploy:
      mode: replicated
      replicas: 2
    depends_on:
      - db
      - redis
    links:
      - db
      - redis
    ports:
      - "4000"
    environment:
      DB_USER: root
      DB_PASSWORD: example
      DB_ADDR: db
      REDIS_ADDR: redis
      COOLDOWN: 1000
      OAUTH_CLIENT_ID: 918036586620-l07dtig8lks682dhk71l4vemhqbafjun.apps.googleusercontent.com
  nginx:
    image: nginx:latest
    profiles:
      - backend
      - all
    volumes:
      - ./config/nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - api
    ports:
      - "4000:4000"
  ui:
    profiles:
      - frontend
      - all
    image: pixel_ui:local
    build: ./ui
    restart: always
    depends_on:
      - api
    ports:
      - 3000:80